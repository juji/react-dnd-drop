{"version":3,"sources":["../src/index.js"],"names":["DnD","props","e","preventDefault","ReactDOM","findDOMNode","elm","getBoundingClientRect","top","left","width","height","setState","dragging","deltaLeft","clientX","deltaTop","clientY","state","_intersect","dropAreas","getDropAreas","nullVal","filter","v","length","Error","bound","copy","right","bottom","overlaps","map","i","b","onDrop","overlayStyle","copyStyle","overlay","backgroundColor","position","zIndex","cursor","display","opacity","r","onMouseDown","children","onMouseMove","onMouseUp","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport boxIntersect  from 'box-intersect';\nimport ReactDOM from 'react-dom'\n\nexport default class DnD extends Component {\n\n  constructor(props){\n\n    super(props);\n    this.state = {\n      dragging: false,\n      width: 0,\n      height: 0,\n      top: 0,\n      left: 0,\n      deltaTop:0,\n      deltaLeft:0\n    }\n\n    this.copy = null;\n    this.elm = null;\n\n  }\n\n  onMouseDown = (e) => {\n    e.preventDefault()\n    const { top, left, width, height } = ReactDOM.findDOMNode(this.elm).getBoundingClientRect();\n    this.setState({ top, left, width, height, \n      dragging: true,\n      deltaLeft: e.clientX - left,\n      deltaTop: e.clientY - top\n    })\n  }\n\n  onMouseMove = (e) => {\n    if(!this.state.dragging) return;\n    this.setState({\n      top: e.clientY - this.state.deltaTop,\n      left: e.clientX - this.state.deltaLeft\n    })\n  }\n\n  onMouseUp = () => {\n    if(!this.state.dragging) return;\n    this.setState({ dragging: false });\n    this._intersect();\n  }\n\n  _intersect = () => {\n\n    // check for null dropArea\n    const dropAreas = this.props.getDropAreas();\n\n    const nullVal = dropAreas.filter(v => !v);\n    if(nullVal.length) throw new Error('REACT-DND-DROP: dropArea Element cannot be empty');\n\n    const bound = ReactDOM.findDOMNode(this.copy).getBoundingClientRect();\n    const copy = [ bound.left, bound.top, bound.right, bound.bottom ];\n\n    // calc intersect\n    const overlaps = dropAreas.map((v,i) => {\n      const b = ReactDOM.findDOMNode(v).getBoundingClientRect();\n      return boxIntersect( [[ b.left, b.top, b.right, b.bottom ], copy] ).length ? i : null\n    }).filter(v => v!== null);\n\n    if(overlaps.length && overlaps)\n      this.props.onDrop( overlaps )\n  }\n\n  render(){\n    \n    const { dragging, width, height, top, left } = this.state;\n    const { overlayStyle, copyStyle } = this.props;\n\n    const overlay = {\n      backgroundColor:'transparent',\n      position:'fixed',\n      top:0,\n      left:0,\n      width:'100%',\n      height:'100%',\n      zIndex:'3000',\n      cursor:'grabbing',\n      ...(overlayStyle || {}),\n      display: dragging ? 'block' : 'none'\n    }\n\n    const copy = {\n      opacity:0.8,\n      position:'fixed',\n      zIndex:'3001',\n      cursor:'grabbing',\n      ...(copyStyle || {}),\n      display: dragging ? 'inline-block' : 'none',\n      width, height, top, left\n    }\n\n    return <div ref={r => this.elm = r} onMouseDown={this.onMouseDown} onTouchStart={this.onMouseDown}>\n      {this.props.children}\n      <div \n        onMouseMove={ dragging ? this.onMouseMove : null }\n        onTouchMove={ dragging ? this.onMouseMove : null }\n        onMouseUp={ dragging ? this.onMouseUp : null }\n        onTouchEnd={ dragging ? this.onMouseUp : null }\n        style={overlay}\n      >\n        <div ref={r => this.copy = r} style={copy}>\n          {this.props.children}\n        </div>\n      </div>\n    </div>\n\n  }\n\n}"],"file":"index.js"}