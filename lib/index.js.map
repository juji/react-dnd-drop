{"version":3,"sources":["../src/index.js"],"names":["DnD","props","e","console","log","preventDefault","ReactDOM","findDOMNode","elm","getBoundingClientRect","top","left","width","height","setState","dragging","deltaLeft","touches","clientX","undefined","deltaTop","clientY","state","_intersect","dropAreas","getDropAreas","nullVal","filter","v","length","Error","bound","copy","right","bottom","overlaps","map","i","b","onDrop","overlayStyle","copyStyle","overlay","backgroundColor","position","zIndex","cursor","display","opacity","r","onMouseDown","onMouseMove","onMouseUp","children","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport boxIntersect  from 'box-intersect';\nimport ReactDOM from 'react-dom'\n\nexport default class DnD extends Component {\n\n  constructor(props){\n\n    super(props);\n    this.state = {\n      dragging: false,\n      width: 0,\n      height: 0,\n      top: 0,\n      left: 0,\n      deltaTop:0,\n      deltaLeft:0\n    }\n\n    this.copy = null;\n    this.elm = null;\n\n  }\n\n  onMouseDown = (e) => {\n    console.log('onMouseDown');\n    try{ e.preventDefault() }catch(e){}\n    const { top, left, width, height } = ReactDOM.findDOMNode(this.elm).getBoundingClientRect();\n    this.setState({ top, left, width, height, \n      dragging: true,\n      deltaLeft: (e.touches && typeof e.touches[0].clientX !== undefined ? e.touches[0].clientX : e.clientX) - left,\n      deltaTop: (e.touches && typeof e.touches[0].clientY !== undefined ? e.touches[0].clientY : e.clientX) - top\n    })\n  }\n\n  onMouseMove = (e) => {\n    console.log('onMouseMove');\n    if(!this.state.dragging) return;\n    this.setState({\n      left: (e.touches && typeof e.touches[0].clientX !== undefined ? e.touches[0].clientX : e.clientX) - this.state.deltaLeft,\n      top: (e.touches && typeof e.touches[0].clientY !== undefined ? e.touches[0].clientY : e.clientX) - this.state.deltaTop\n    })\n  }\n\n  onMouseUp = () => {\n    if(!this.state.dragging) return;\n    this.setState({ dragging: false });\n    this._intersect();\n  }\n\n  _intersect = () => {\n\n    // check for null dropArea\n    const dropAreas = this.props.getDropAreas();\n\n    const nullVal = dropAreas.filter(v => !v);\n    if(nullVal.length) throw new Error('REACT-DND-DROP: dropArea Element cannot be empty');\n\n    const bound = ReactDOM.findDOMNode(this.copy).getBoundingClientRect();\n    const copy = [ bound.left, bound.top, bound.right, bound.bottom ];\n\n    // calc intersect\n    const overlaps = dropAreas.map((v,i) => {\n      const b = ReactDOM.findDOMNode(v).getBoundingClientRect();\n      return boxIntersect( [[ b.left, b.top, b.right, b.bottom ], copy] ).length ? i : null\n    }).filter(v => v!== null);\n\n    if(overlaps.length && overlaps)\n      this.props.onDrop( overlaps )\n  }\n\n  render(){\n    \n    const { dragging, width, height, top, left } = this.state;\n    const { overlayStyle, copyStyle } = this.props;\n\n    const overlay = {\n      backgroundColor:'transparent',\n      position:'fixed',\n      top:0,\n      left:0,\n      width:'100%',\n      height:'100%',\n      zIndex:'3000',\n      cursor:'grabbing',\n      ...(overlayStyle || {}),\n      display: dragging ? 'block' : 'none'\n    }\n\n    const copy = {\n      opacity:0.8,\n      position:'fixed',\n      zIndex:'3001',\n      cursor:'grabbing',\n      ...(copyStyle || {}),\n      display: dragging ? 'inline-block' : 'none',\n      width, height, top, left\n    }\n\n    return <div ref={r => this.elm = r} \n      onMouseDown={this.onMouseDown} \n      onTouchStart={this.onMouseDown}\n      onTouchMove={ dragging ? this.onMouseMove : null }\n      onTouchEnd={ dragging ? this.onMouseUp : null }\n    >\n      {this.props.children}\n      <div \n        onMouseMove={ dragging ? this.onMouseMove : null }\n        onMouseUp={ dragging ? this.onMouseUp : null }\n        style={overlay}\n      >\n        <div ref={r => this.copy = r} style={copy}>\n          {this.props.children}\n        </div>\n      </div>\n    </div>\n\n  }\n\n}"],"file":"index.js"}